1 chapter
date ;echo date
cal  ;echo calender
df   ;disk available
free ;memory available


win+w view all window
ctrl+alt+l lock the screen

/    equal absolute path
don't have '/' is relativeeee path

catalogue structure 

     /

/bin	/usr	/sbin


    bin local src   

在命令窗口下
ctrl+shift+t在同一个窗口下创建一个新的命令窗口，可以通过 alt+num来切换，ctrl+d来关闭

ctrl+win+方向键来放大缩小
长按win键来查看快捷键


cat 查看文件内容 cat -n带行数查看

cat > filename 
cat  file1 >>file2
cat file1 file2 > file3

echo "$PATH" 查看配置未见目录

which 命令名 查看命令的绝对路径

find 查找文件

sort 对文件内容或者查询结果进行排序

sort -t "分隔符" 文件名

wc -l filename l 行数 w 单词数 -m 字符数

head tail -num 显示几行

grep 关键字 filename 查询文件内部的内容

pwd 显示当前目录的绝对路径

mkdir -m 777（权限）文件目录名 w（4）r（2）x（1）执行

chmod -arwx 文件名	修改文件的权限 a=all u=user g=group o=others +增加 -减少
chmod 777（权限） filename

find whereis locate + filename 查找文件 具体可以使用 man or help

which + 命令名 可以查看命令本身的绝对路径

tar 打包压缩，抽取打包文件解压
example： tar -zxvf 文件名.tar.zip  解压文件 z 解压 .zip文件 x 抽取打包文件 v 列出文件详细清单 f 使用文件设备
tar 主选项为 c 打包 x 解包 t 列出备份了哪些文件
    辅助选项 j bzip2
    压缩 tar -cvzf

INIt num   0关机  6 重启  halt 关机   poweroff 关机   reboot 重启  shutdown -h +2 两分钟后关机   shutdown -h 22:00 十点钟关机



                                        vi编辑器
vim +5 filename  open file on 5 line

vim +/"keyword" open fiel at "keyword"

h,j,k,l,w,b,e移动光标 $,0行首，行尾。

ctrl + u ctrl + d +b +f 半屏or一屏

sp 上下分屏 vsp左右分屏  在分屏的情况下 利用yy等可以进行复制粘贴

:1,2 w >> ~/file  把1到2行添加到文件file中

:^,$s/要修改的/修改为/g   g表示全部，默认只修改第一个   s全部替换

删除 x 单个字符 dd一行 包括回车 D一行 不包括回车 J合并下一行 


替换 s 可以多个 r 只能一个

:w:   表示另存为

apt-get  安装卸载更新软件等

free 查看内存  kill -num pid 杀死进程

ctrl+z 使程序睡眠  ctrl + c 结束进程

                                                                shell
shell编程 ：cat /etc/shells


有点类似于汇编语言的正则表达式

开头要加入
#! /bin/bash
#this is my first shell script   #后面表示注释
echo "hello world!"
date 
read -p "Please input your name " name 
echo "Your name is:" $name
if ["$name"="user"];then
    echo "ok"
else
    echo "error"
fi
#case 变量值 in
#模式1）
#命令表1；
#模式2）
#命令表2
#...
#×）
#命令表n
#esac


#for while until break and continue
function func(){
    cal
    date 
    pwd
    echo "this is function!"
    }

    func

